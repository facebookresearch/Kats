(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8971],{3905:function(e,r,n){"use strict";n.d(r,{Zo:function(){return c},kt:function(){return m}});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=t.createContext({}),d=function(e){var r=t.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},c=function(e){var r=d(e.components);return t.createElement(u.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},s=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=d(n),m=a,g=s["".concat(u,".").concat(m)]||s[m]||p[m]||i;return n?t.createElement(g,o(o({ref:r},c),{},{components:n})):t.createElement(g,o({ref:r},c))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=s;var l={};for(var u in r)hasOwnProperty.call(r,u)&&(l[u]=r[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}s.displayName="MDXCreateElement"},3899:function(e,r,n){"use strict";n.d(r,{Z:function(){return u},T:function(){return d}});var t=n(2122),a=n(7294),i=n(6742),o=n(2263),l=n(907);function u(e){return a.createElement(i.Z,(0,t.Z)({},e,{to:(r=e.to,u=(0,l.zu)(),(0,o.default)().siteConfig.customFields.githubLinkVersionToBaseUrl[null!=(n=null==u?void 0:u.name)?n:"current"]+r),target:"_blank"}));var r,n,u}function d(e){var r,n=null!=(r=e.text)?r:"Example";return a.createElement(u,e,a.createElement("span",null,"\xa0"),a.createElement("img",{src:"https://img.shields.io/badge/-"+n+"-informational",alt:"Example"}))}},8397:function(e,r,n){"use strict";n.r(r),n.d(r,{frontMatter:function(){return u},metadata:function(){return d},toc:function(){return c},default:function(){return s}});var t=n(2122),a=n(9756),i=(n(7294),n(3905)),o=n(3899),l=["components"],u={id:"workdir",title:"Customizing working directory pattern",sidebar_label:"Customizing working directory pattern"},d={unversionedId:"configure_hydra/workdir",id:"configure_hydra/workdir",isDocsHomePage:!1,title:"Customizing working directory pattern",description:"Below are a few examples of customizing output directory patterns.",source:"@site/docs/configure_hydra/workdir.md",sourceDirName:"configure_hydra",slug:"/configure_hydra/workdir",permalink:"/docs/next/configure_hydra/workdir",editUrl:"https://github.com/facebookresearch/kats/edit/master/website/docs/configure_hydra/workdir.md",version:"current",lastUpdatedBy:"Jieru Hu",lastUpdatedAt:1615846579,formattedLastUpdatedAt:"3/15/2021",sidebar_label:"Customizing working directory pattern",frontMatter:{id:"workdir",title:"Customizing working directory pattern",sidebar_label:"Customizing working directory pattern"}},c=[{value:"Configuration for run",id:"configuration-for-run",children:[]},{value:"Configuration for multirun",id:"configuration-for-multirun",children:[]},{value:"Using <code>hydra.job.override_dirname</code>",id:"using-hydrajoboverride_dirname",children:[]}],p={toc:c};function s(e){var r=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)(o.T,{text:"Example application",to:"examples/configure_hydra/workdir",mdxType:"ExampleGithubLink"}),(0,i.kt)("p",null,"Below are a few examples of customizing output directory patterns."),(0,i.kt)("h3",{id:"configuration-for-run"},"Configuration for run"),(0,i.kt)("p",null,"Run output directory grouped by date:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"hydra:\n  run:\n    dir: ./outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}\n")),(0,i.kt)("p",null,"Run output directory grouped by job name:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"hydra:\n  run:\n    dir: outputs/${hydra.job.name}/${now:%Y-%m-%d_%H-%M-%S}\n")),(0,i.kt)("p",null,"Run output directory can contain user configuration variables:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"hydra:\n  run:\n    dir: outputs/${now:%Y-%m-%d_%H-%M-%S}/opt:${optimizer.type}\n")),(0,i.kt)("h3",{id:"configuration-for-multirun"},"Configuration for multirun"),(0,i.kt)("p",null,"We will run the application with same command but different configurations:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"python my_app.py --multirun a=a1,a2,a3 \n")),(0,i.kt)("p",null,"Default multirun dir configurations:"),(0,i.kt)("div",{className:"row"},(0,i.kt)("div",{className:"col col--8"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'},"hydra:\n  sweep:\n    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}\n    subdir: ${hydra.job.num}\n\n"))),(0,i.kt)("div",{className:"col  col--4"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="workding dir created"',title:'"workding',dir:!0,'created"':!0},"$ tree my_app -d\nmy_app\n\u251c\u2500\u2500 0\n\u251c\u2500\u2500 1\n\u2514\u2500\u2500 2\n")))),(0,i.kt)("p",null,"Similar configuration patterns in run can be applied to config multirun dir as well."),(0,i.kt)("p",null,"For example, multirun output directory grouped by job name, and sub dir by job num:"),(0,i.kt)("div",{className:"row"},(0,i.kt)("div",{className:"col col--6"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'},"hydra:\n  sweep:\n    dir: ${hydra.job.name}\n    subdir: ${hydra.job.num}\n\n"))),(0,i.kt)("div",{className:"col  col--6"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="workding dir created"',title:'"workding',dir:!0,'created"':!0},"$ tree my_app -d\nmy_app\n\u251c\u2500\u2500 0\n\u251c\u2500\u2500 1\n\u2514\u2500\u2500 2\n")))),(0,i.kt)("h3",{id:"using-hydrajoboverride_dirname"},"Using ",(0,i.kt)("inlineCode",{parentName:"h3"},"hydra.job.override_dirname")),(0,i.kt)(o.T,{text:"Example application",to:"examples/configure_hydra/job_override_dirname",mdxType:"ExampleGithubLink"}),(0,i.kt)("p",null,"This field is populated automatically using your command line arguments and is typically being used as a part of your\noutput directory pattern. It is meant to be used along with the configuration for working dir, especially\nin ",(0,i.kt)("inlineCode",{parentName:"p"},"hydra.sweep.subdir"),"."),(0,i.kt)("p",null,"If we run the example application with the following commandline overrides and configs:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"python my_app.py --multirun batch_size=32 learning_rate=0.1,0.01\n")),(0,i.kt)("div",{className:"row"},(0,i.kt)("div",{className:"col col--6"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'},"hydra:\n  sweep:\n    dir: multirun\n    subdir: ${hydra.job.override_dirname}\n"))),(0,i.kt)("div",{className:"col  col--6"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="working dir created"',title:'"working',dir:!0,'created"':!0},"$ tree multirun -d\nmultirun\n\u251c\u2500\u2500 batch_size=32,learning_rate=0.01\n\u2514\u2500\u2500 batch_size=32,learning_rate=0.1\n")))),(0,i.kt)("p",null,"You can further customized the output dir creation by configuring",(0,i.kt)("inlineCode",{parentName:"p"},"hydra.job.override_dirname"),"."),(0,i.kt)("p",null,"In particular, the separator char ",(0,i.kt)("inlineCode",{parentName:"p"},"=")," and the item separator char ",(0,i.kt)("inlineCode",{parentName:"p"},",")," can be modified by overriding\n",(0,i.kt)("inlineCode",{parentName:"p"},"hydra.job.config.override_dirname.kv_sep")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"hydra.job.config.override_dirname.item_sep"),".\nCommand line override keys can also be automatically excluded from the generated ",(0,i.kt)("inlineCode",{parentName:"p"},"override_dirname"),"."),(0,i.kt)("p",null,"An example of a case where the exclude is useful is a random seed."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"hydra:\n  run:\n    dir: output/${hydra.job.override_dirname}/seed=${seed}\n  job:\n    config:\n      override_dirname:\n        exclude_keys:\n          - seed\n")),(0,i.kt)("p",null,"With this configuration, running"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ python my_app.py --multirun  batch_size=32 learning_rate=0.1,0.01 seed=1,2\n")),(0,i.kt)("p",null,"Would result in a directory structure like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ tree multirun -d\nmultirun\n\u251c\u2500\u2500 batch_size=32,learning_rate=0.01\n\u2502\xa0\xa0 \u251c\u2500\u2500 seed=1\n\u2502\xa0\xa0 \u2514\u2500\u2500 seed=2\n\u2514\u2500\u2500 batch_size=32,learning_rate=0.1\n    \u251c\u2500\u2500 seed=1\n    \u2514\u2500\u2500 seed=2\n")))}s.isMDXComponent=!0}}]);